/**************************************
LAYOUT CSS
**************************************/

.wrapper {
  max-width: 992px;
  margin: 50px auto;
}

/**************************************
CSS TO MAKE THE EXAMPLE LOOK PRETTY
**************************************/

*,
*:before,
*:after {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

body {
  background: #FFF;
  color: #FFF;
  font-family: 'Open Sans';
  font-size: 40px;
  font-weight: 700;
  text-align: center;
  margin: 0;
}

.one,
.two,
.three,
.four,
.five,
.six,
.seven {
  background-color: #163A59;
  color: #FF6600;
  border: 2px solid;
  box-sizing: border-box;
  min-height: 100px;
  line-height: 100px;
}

/* 使用 Mobile First 原則

只能用 CSS Grid 來佈局

在小於 576px 的螢幕，所有元素都呈垂直堆疊並佔滿 container 的全部寬度

在介於 576px 到 992px 的螢幕上，元素 1、4 和 7 維持全寬，而元素 2、3、5 和 6 的寬度是container <div> 寬度的一半。

在大於等於 992px 的螢幕上，排版呈現如上圖。而且container的寬度永遠不超過 992px。元素 1 和 6 是 container 寬度的 25%；元素 3 和 4 是 50%；元素 2 和 5 是75%；而元素 7 繼續維持全寬。 */

/* 第一行在這個尺寸不需要，第二行改寫法 */
/* .wrapper {
  display: grid;
  width: 100%;
} */

@media screen and (min-width: 576px) {
  .wrapper {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
  }

  /* 只要觀察最多的那一行有幾個 grid ，寫下數字、1fr(代表一格線單位、會自動將該數量的 grid 佔滿整行) */

  .one,
  .four,
  .seven {
    /* grid-column: 1/3 */
    /* grid-column: 1 / span 2; */
    /* 兩者寫法相同，代表結尾在跨第二格的右邊 */
    grid-column: span 2;
    /* 這個寫法更好，代表跨兩格，沒有管起始結尾，需要的話再加 */
    /* 在下一個 media 發揮作用 ＝ 精簡程式碼 */
  }
}

@media screen and (min-width: 992px) {
  .wrapper {
    grid-template-columns: repeat(4, 1fr);
  }

  .one {
    grid-column: 1/2;
  }

  .two {
    /* 寫法相同，可透過 devtool 參照 */
    /* grid-column: 2/5; */
    grid-column: 2/-1
  }

  .three {
    grid-column: 1/3;
  }

  /* 呈上，因為前面僅寫 span 2，這裡就不需要再多提位置了 */
  /* .four {
    grid-column: 3/-1;
  } */

  .five {
    grid-column: 1/-2;
  }

  .seven {
    grid-column: 1/-1;
  }
}

/* 觀摩 done :D */
/* 不知道最後這段能不能精簡更多寫法，目前僅有過去未曾被設定過的 six 安全下莊*/